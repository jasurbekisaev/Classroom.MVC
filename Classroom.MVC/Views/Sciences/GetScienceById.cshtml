@using ClassRoomData.Entities
@using Classroom.MVC.Helpers
@model ClassRoomData.Entities.Science
@inject UserProvider UserProvider   

<h1>Science</h1>
<h3>Name: @Model.Name</h3>
<h3>Description: @Model.Description</h3>
<h3>Teacher: @Model.UserSciences!.First(u => u.Type == EUserScience.Teacher).User?.UserName</h3>


<a class="btn btn-primary" asp-controller="Tasks" asp-action="Index" asp-route-scienceId="@Model.Id">Tasks</a>
@{
    var id = Model.UserSciences!.First(u => u.Type == EUserScience.Teacher).User?.Id;
    if (UserProvider.UserId == id)
    {
        <a class="btn btn-secondary" asp-action="SendJoinScienceRequest" asp-route-scienceId="@Model.Id">Send join request</a>
    }
}

<h1>Students</h1>
<table class="table">
    <thead>
    <tr>
        <th scope="col">#</th>
        <th scope="col">Firstname</th>
        <th scope="col">Username</th>
        <th scope="col">Role</th>
            <th scope="col">Remove</th>
    </tr>
    </thead>
    <tbody>
    @{
        for (var i = 0; i < Model.UserSciences!.Count; i++)
        {
            var userSchool = Model.UserSciences[i];
            <tr>
                <th scope="row">@(i + 1)</th>
                <td>@userSchool.User.FirstName</td>
                <td>@userSchool.User.UserName</td>
                <td>@userSchool.Type</td>
                
                    <td>
                        @if (userSchool.Type == EUserScience.Student && @Model.UserSciences!.First(u => u.Type == EUserScience.Teacher).User?.Id == UserProvider.UserId)
                        {
                            <a class="btn btn-primary" style="color : red" asp-action="RemoveStudent" asp-route-userId="@userSchool.User.Id" asp-route-scienceId="@Model.Id" asp-route-schoolid="@ViewBag.SchoolId">Remove</a>
                        }
                        else
                        {
                            <h3> ✅ </h3>
                        }
                    </td>

            </tr>
        }
    }
    </tbody>
</table>